# This is a basic workflow to help you get started with Actions

# Controls when the action will run. 
on:
  push:
    branches:
      - master

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: mgmt590-am-rest-api
  REGION: us-central1
  PG_SSLROOTCERT: ${{ secrets.PG_SSLROOTCERT }}
  PG_SSLCLIENT_CERT: ${{ secrets.PG_SSLCLIENT_CERT }}
  PG_SSL_CLIENT_KEY: ${{ secrets.PG_SSL_CLIENT_KEY }}
  PG_HOST: ${{ secrets.PG_HOST }}
  PG_USER: ${{ secrets.PG_USER }}
  PG_USER_PASSWORD: ${{ secrets.PG_USER_PASSWORD}}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        
    - name: Test Container
      run: |-
        docker run -e PG_SSLROOTCERT=${{ env.PG_SSLROOTCERT }} -e PG_SSLCLIENT_CERT=${{ env.PG_SSLCLIENT_CERT }} -e PG_SSL_CLIENT_KEY=${{ env.PG_SSL_CLIENT_KEY }} -e PG_HOST=${{ env.PG_HOST }} -e PG_USER=${{ env.PG_USER }} -e PG_USER_PASSWORD=${{ env.PG_USER_PASSWORD }} -w /app gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} pytest -v
    
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        region: ${{ env.REGION }}
        env_vars: PG_SSLROOTCERT=${{ secrets.PG_SSLROOTCERT }},PG_SSLCLIENT_CERT=${{ secrets.PG_SSLCLIENT_CERT }},PG_SSL_CLIENT_KEY=${{ secrets.PG_SSL_CLIENT_KEY }},PG_HOST=${{ secrets.PG_HOST }},PG_USER=${{ secrets.PG_USER }},PG_DBNAME=${{ secrets.PG_DBNAME }},PG_USER_PASSWORD=${{ secrets.PG_USER_PASSWORD}} 
        

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}
